{"version":3,"sources":["components/Wrapper.js","Vastaukset.js","Kysymykset.js","Tentit.js","Register.js","Login.js","App.js","index.js"],"names":["Context","React","createContext","Wrapper","props","useState","locale","setLocale","messages","setMessages","Provider","value","selectLanguage","e","newLocale","target","Finnish","Vietnamese","English","children","Kysymykset","useRouteMatch","path","url","answer","setAnswer","useEffect","a","axios","get","questionID","then","response","console","log","data","getAnswer","changeText","examID","item","event","put","id","oikea","handleCheck","vastausteksti","checked","deleteAnswer","delete","length","className","map","Checkbox","defaultChecked","onClick","uuid","TextField","label","defaultMessage","description","variant","style","width","defaultValue","onBlur","questions","setQuestions","exam","setExam","getQuestion","changeQText","toString","addQuestion","post","deleteQuestion","addAnswer","Button","color","Paper","index","teksti","Vastaukset","Exam","setExamID","newExamDialogOpen","setNewExamDialogOpen","examName","getExam","addExam","component","Link","to","nimi","NewExamDialog","open","onClose","exact","Dialog","DialogTitle","Register","etunimi","sukunimi","email","salasana","admin","userData","setUserData","onChange","name","onSubmit","preventDefault","type","Login","token","localStorage","setItem","Home","App","context","useContext","useReducer","state","action","Error","alertOpen","setAlertOpen","alertMessage","setAlertMessage","client","W3CWebSocket","Alert","elevation","HomeIcon","SvgIcon","d","onopen","onmessage","date","year","month","day","weekday","Tentit","Snackbar","reason","autoHideDuration","anchorOrigin","vertical","horizontal","severity","ReactDOM","render","StrictMode","Date","now","document","getElementById"],"mappings":"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","file":"static/js/main.208000eb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { IntlProvider } from 'react-intl';\r\nimport Finnish from '../lang/fi.json'\r\nimport Vietnamese from '../lang/vi.json'\r\nimport English from '../lang/en.json'\r\n\r\nexport const Context = React.createContext();\r\n\r\n//const local = navigator.language;\r\n/* \r\nlet lang;\r\nif (local === 'fi') {\r\n   lang = Finnish;\r\n}else {\r\n   if (local === 'vn') {\r\n       lang = Vietnamese;\r\n   } else {\r\n       lang = English;\r\n   }\r\n}\r\n */\r\nconst Wrapper = (props) => {\r\n    const [locale, setLocale] = useState('fi');\r\n    const [messages, setMessages] = useState('fi');\r\n\r\n    function selectLanguage(e) {\r\n        const newLocale = e.target.value;\r\n        setLocale(newLocale);\r\n        if (newLocale === 'fi') {\r\n            setMessages(Finnish);\r\n        } else {\r\n            if (newLocale === 'vi') {\r\n                setMessages(Vietnamese);\r\n\r\n            } else {\r\n                setMessages(English)\r\n            }\r\n        }\r\n    }\r\n        return (\r\n\r\n            <Context.Provider value={{ locale, selectLanguage }}>\r\n                <IntlProvider messages={messages} locale={locale}>\r\n                    {props.children}\r\n                </IntlProvider>\r\n            </Context.Provider>\r\n        );\r\n    \r\n}\r\nexport default Wrapper;","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport uuid from 'react-uuid';\r\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams\r\n  } from \"react-router-dom\";\r\nimport Dropzone from './Dropzone'\r\n\r\n  const Kysymykset = (props) => {\r\n    let {path, url} = useRouteMatch()\r\n    const [answer, setAnswer] = useState([])\r\n    const [questionID, setQuestionID] = useState(0)\r\n\r\n\r\n      useEffect(() => {\r\n        const getAnswer = async () =>{\r\n\r\n          axios\r\n            .get(\"http://localhost:5000/vastaukset/\" + props.questionID)\r\n            .then(response => {\r\n              console.log(\"response\", response.data)\r\n              setAnswer(response.data)\r\n            })\r\n        }\r\n        getAnswer()\r\n      },[])\r\n\r\n      const changeText = async (examID, questionID, item, event) => {\r\n        //setQuestionID(props.questionID)\r\n        axios\r\n          .put(`http://localhost:5000/muokkaavastaus/${examID}/${questionID}/${item.id}/${event.target.value}/${item.oikea}/`)\r\n      }\r\n\r\n      const handleCheck = async (examID, questionID, item, event) =>{\r\n        //console.log(\"handle check\")\r\n        axios\r\n          .put(`http://localhost:5000/muokkaavastaus/${examID}/${questionID}/${item.id}/${item.vastausteksti}/${event.target.checked}/`)\r\n      }\r\n\r\n      const deleteAnswer = async (item) =>{\r\n        axios\r\n          .delete(`http://localhost:5000/poistavastaus/${item.id}`)\r\n      }\r\n\r\n\r\n      \r\n      if (answer.length < 1)\r\n        return <></>\r\n      return (\r\n        <div className = \"Answer-list\" >\r\n            <div>\r\n      {answer.map((item) =>\r\n      <div className=\"answer\">\r\n        <Checkbox\r\n          key={uuid()}\r\n          defaultChecked={item.oikea}\r\n          \r\n          onClick={(event) => handleCheck(props.examID, props.questionID, item, event)} >\r\n        </Checkbox>\r\n\r\n        \r\n\r\n        <TextField \r\n          key={uuid()}\r\n          label={<FormattedMessage\r\n            id=\"answer\"\r\n            defaultMessage=\"Vastaus\"\r\n            description=\"Answer\"\r\n        ></FormattedMessage>}\r\n          variant=\"outlined\"\r\n          style={{width:'45%'}}\r\n          defaultValue={item.vastausteksti}\r\n          onBlur={(event) => changeText(props.examID, props.questionID, item, event)}>\r\n        </TextField>\r\n       \r\n        <DeleteIcon\r\n          key={uuid()}\r\n          onClick={(event) => deleteAnswer(item)}>\r\n\r\n        </DeleteIcon>\r\n      </div>\r\n        )}\r\n        \r\n        </div>\r\n        \r\n\r\n        \r\n        </div>\r\n      )\r\n\r\n\r\n  }\r\n  export default Kysymykset","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from 'axios';\r\nimport Vastaukset from './Vastaukset'\r\nimport uuid from 'react-uuid';\r\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst Kysymykset = (props) => {\r\n  let { path, url } = useRouteMatch()\r\n  const [questions, setQuestions] = useState([])\r\n  const [exam, setExam] = useState(0)\r\n  const [questionText, setQuestionText] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    const getQuestion = async () => {\r\n      //console.log(\"http://localhost:5000/kysymykset/\" + props.examID)\r\n      axios\r\n        .get(\"http://localhost:5000/kysymykset/\" + props.examID)\r\n        .then(response => {\r\n          setQuestions(response.data)\r\n        })\r\n    }\r\n    getQuestion()\r\n  }, [props.examID, exam])\r\n\r\n/*   const qClickHandler = (event) => {\r\n    console.log(questionText, event.target.value.toString())\r\n    setQuestionText(event.target.value.toString())\r\n  } */\r\n\r\n  const changeQText = async (examID, questionID, event) => {\r\n/*     if (questionText !== event.target.value.toString())\r\n    { */\r\n      axios\r\n      .put(`http://localhost:5000/muokkaakysymys/${examID}/${questionID}/${event.target.value.toString()}`)\r\n    /* }\r\n      else return */\r\n  }\r\n\r\n  const addQuestion = async (examID) => {\r\n    axios\r\n      .post(`http://localhost:5000/lisaakysymys/${examID}/' '`)\r\n  }\r\n\r\n  const deleteQuestion = async (questionID) => {\r\n    axios\r\n      .delete(`http://localhost:5000/poistakysymys/${questionID.id}`)\r\n  }\r\n\r\n  const addAnswer = async (examID, questionID) => {\r\n    axios\r\n      .post(`http://localhost:5000/lisaavastaus/${examID}/${questionID}/' '/false`)\r\n    setExam(examID)\r\n  }\r\n\r\n  if (questions.length < 1) {\r\n    return <div>\r\n      <div>\r\n        <Button color=\"primary\"\r\n          key={uuid()}\r\n          onClick={() => addQuestion(props.examID)}>{<FormattedMessage\r\n            id=\"add-question\"\r\n            defaultMessage=\"Lisää kysymys\"\r\n            description=\"Add question\"\r\n          ></FormattedMessage>}</Button>\r\n      </div>\r\n\r\n    </div>\r\n  }\r\n  else\r\n    return (\r\n\r\n      <div className=\"Question-list\">\r\n        <Paper style={{ width: '75%' }}>\r\n          <div>\r\n            {setExam[props.e]}\r\n            {questions.map((item, index) =>\r\n\r\n              // tekstikentästä poistuminen aiheuttaa verkkoliikennettä vaikkei mitään muuteta\r\n              // kysymyksen poisto puuttuu (DELETE CASCADE?)\r\n              <div className=\"Question\">\r\n                <TextField\r\n                  key={uuid()}\r\n                  label={<FormattedMessage\r\n                    id=\"question\"\r\n                    defaultMessage=\"Kysymys\"\r\n                    description=\"Question\"\r\n                  ></FormattedMessage>}\r\n                  style={{ width: '50%' }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={item.teksti}\r\n                 /*  onClick={(event) => qClickHandler(event)} */\r\n                  onBlur={(event) => changeQText(props.examID, item.id, event)} ></TextField>\r\n                <DeleteIcon\r\n                  key={uuid()}\r\n                  onClick={(event) => deleteQuestion(item)}>\r\n\r\n                </DeleteIcon>\r\n                <Vastaukset key={uuid()} examID={props.examID} questionID={item.id}></Vastaukset>\r\n                <div id={item.index}>\r\n                  <Button key={uuid()} color=\"primary\"\r\n                    onClick={() => addAnswer(props.examID, item.id)}>{<FormattedMessage\r\n                      id=\"add-answer\"\r\n                      defaultMessage=\"Lisää vastaus\"\r\n                      description=\"Add answer\"\r\n                    ></FormattedMessage>}</Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <Button color=\"primary\"\r\n              key={uuid()}\r\n              onClick={() => addQuestion(props.examID)}>{<FormattedMessage\r\n                id=\"add-question\"\r\n                defaultMessage=\"Lisää kysymys\"\r\n                description=\"Add question\"\r\n              ></FormattedMessage>}</Button>\r\n          </div>\r\n        </Paper>\r\n      </div>\r\n\r\n    )\r\n}\r\nexport default Kysymykset","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport uuid from 'react-uuid';\r\nimport axios from 'axios';\r\nimport Kysymykset from './Kysymykset'\r\nimport { FormattedMessage, FormattedDate } from 'react-intl';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams\r\n  } from \"react-router-dom\";\r\n\r\n  const Exam = () => {\r\n    let {path, url} = useRouteMatch()\r\n    const [exam, setExam] = useState([])\r\n    const [examID, setExamID] = useState()\r\n    const [newExamDialogOpen, setNewExamDialogOpen] = useState(false)\r\n    const [examName, setExamName] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        const getExam = async () =>{\r\n          axios\r\n            .get(\"http://localhost:5000/tentit\")\r\n            .then(response => {\r\n              setExam(response.data)\r\n            })\r\n        }\r\n        getExam()\r\n      }, [])\r\n\r\n      const onClick = () => {\r\n        setNewExamDialogOpen(true)\r\n      }\r\n\r\n      const handleClose = () => {\r\n        setNewExamDialogOpen(false)\r\n        if(examName)\r\n          addExam(examName)\r\n      }\r\n      const addExam = async () => {\r\n        axios\r\n          .post(`http://localhost:5000/lisaatentti/${examName}`)\r\n      }\r\n      if (exam.length < 1)\r\n        return <>loading...</>\r\n      return (\r\n        <div className = \"Exam-list\">\r\n            <div>\r\n      {exam.map((item, index) =>\r\n    \r\n        <Button component={Link} to={`${url}/${item.id}`} key={uuid()} color=\"primary\"\r\n        onClick={() => setExamID(item.id)} >\r\n                {item.nimi}</Button>\r\n        )}\r\n\r\n\r\n\r\n        <Button color=\"primary\"\r\n                onClick={onClick}\r\n                >\r\n                  +\r\n                  </Button>\r\n                  \r\n                  <NewExamDialog examName={examName} open={newExamDialogOpen} onClose={handleClose}></NewExamDialog>\r\n        \r\n        </div>\r\n        \r\n        <Switch>\r\n            <Route exact path = {path}>\r\n            </Route>\r\n            <Route path={`${path}/:id`}>\r\n            <Kysymykset examID={examID}></Kysymykset>\r\n            </Route>\r\n        </Switch>\r\n\r\n\r\n        \r\n        </div>\r\n      )\r\n  }\r\n  export default Exam\r\n\r\n  function NewExamDialog(props){\r\n    const {open, onClose, examName} = props\r\n\r\n    const handleClose = () => {\r\n      onClose(examName)\r\n    }\r\n\r\n    return (\r\n      <Dialog onClose={handleClose()} open={open}>\r\n      <DialogTitle id=\"newExamDialog\">\r\n      <FormattedMessage\r\n \r\n        id=\"new-exam-title\"\r\n        description=\"Translation for new exam input\"\r\n></FormattedMessage>\r\n      </DialogTitle>\r\n      <TextField key={uuid()}\r\n       \r\n      >teksti</TextField>\r\n      <Button >\r\n          Uus tentti\r\n      </Button>\r\n      <Button>Peruuta</Button>\r\n    </Dialog>\r\n    )\r\n  }","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\r\n\r\nconst Register = () => {\r\n    const [userData, setUserData] = useState({\r\n        etunimi: '',\r\n        sukunimi: '',\r\n        email: '',\r\n        salasana: '',\r\n        admin: ''\r\n    })\r\n\r\n    const onChange = (e) => {\r\n        setUserData({ ...userData, [e.target.name]: e.target.value })\r\n    }\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        try {\r\n\r\n            await\r\n                axios\r\n                    .post(`http://localhost:5000/register/${userData.etunimi}/${userData.sukunimi}/${userData.email}/${userData.salasana}/${userData.admin}`)\r\n\r\n        } catch (e) {\r\n            console.log(\"registration error\")\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"Register\">\r\n                <form onSubmit={onSubmit}>\r\n                    <div>\r\n                        <TextField name=\"etunimi\" label={<FormattedMessage\r\n                            id=\"firstName\"\r\n                            defaultMessage=\"Etunimi\"\r\n                            description=\"First name\"\r\n                        ></FormattedMessage>}\r\n                            onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n                    <div>\r\n                        <TextField name=\"sukunimi\" label={<FormattedMessage\r\n                            id=\"surName\"\r\n                            defaultMessage=\"Sukunimi\"\r\n                            description=\"Last name\"\r\n                        ></FormattedMessage>}\r\n                            onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n                    <div>\r\n                        <TextField name=\"email\" label={<FormattedMessage\r\n                            id=\"email\"\r\n                            defaultMessage=\"Sähköpostiosoite\"\r\n                            description=\"Email\"\r\n                        ></FormattedMessage>}\r\n                            onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n                    <div>\r\n                        <TextField name=\"salasana\" label={<FormattedMessage\r\n                            id=\"password\"\r\n                            defaultMessage=\"Salasana\"\r\n                            description=\"Password\"\r\n                        ></FormattedMessage>} type=\"password\"\r\n                            onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n                    <div><TextField name=\"admin\" label={<FormattedMessage\r\n                            id=\"admin\"\r\n                            defaultMessage=\"Opettaja\"\r\n                            description=\"Teacher password\"\r\n                        ></FormattedMessage>}\r\n                        onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n\r\n                    <Button onClick={onSubmit}>\r\n                        <FormattedMessage\r\n                            id=\"register.button\"\r\n                            defaultMessage=\"Rekisteröidy\"\r\n                            description=\"Register/register button\"\r\n                        ></FormattedMessage>\r\n                    </Button>\r\n                </form>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Register","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\r\n\r\nconst Login = () => {\r\n\r\n    const [userData, setUserData] = useState({\r\n        email: '',\r\n        salasana: '',\r\n    })\r\n\r\n    const onChange = (e) => {\r\n        setUserData({ ...userData, [e.target.name]: e.target.value })\r\n    }\r\n    const onSubmit = async (e) => {\r\n        \r\n        try {\r\n            e.preventDefault()\r\n\r\n            const response =\r\n            await\r\n                axios\r\n                    .post(`http://localhost:5000/login/`,userData)\r\n            \r\n            console.log(response.data)\r\n            const token = await response.data.token\r\n            localStorage.setItem('token', token)\r\n            \r\n        } catch (e) {\r\n            console.log(\"registration error\")\r\n        }\r\n    }\r\n\r\n    const testaaToken = async () => {\r\n       \r\n        try {\r\n            //e.preventDefault()\r\n\r\n            const response =\r\n            await\r\n                axios\r\n                    .get(`http://localhost:5000/tokentestaus/`, {headers: {token: localStorage.token}})\r\n            \r\n            console.log(response)\r\n            \r\n        } catch (e) {\r\n            console.log(\"ei toimi\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <div>\r\n                <TextField name=\"email\" label={<FormattedMessage\r\n                            id=\"email\"\r\n                            defaultMessage=\"Sähköpostiosoite\"\r\n                            description=\"email address\"\r\n                        ></FormattedMessage>}\r\n                    onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n            <div>\r\n                <TextField name=\"salasana\" label={<FormattedMessage\r\n                            id=\"password\"\r\n                            defaultMessage=\"Salasana\"\r\n                            description=\"Password\"\r\n                        ></FormattedMessage>} type=\"password\"\r\n                    onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n\r\n            <div><Button onClick={onSubmit}>{<FormattedMessage\r\n                            id=\"login.button\"\r\n                            defaultMessage=\"Kirjaudu sisään\"\r\n                            description=\"Login button\"\r\n                        ></FormattedMessage>}</Button></div>\r\n\r\n            {/* <div><Button onClick={testaaToken}>Tokenin testaus</Button></div>\r\n            \r\n            {localStorage.token}  */}\r\n            \r\n            </div>\r\n\r\n    )\r\n}\r\nexport default Login","import React, { useEffect, useReducer, useContext } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { useState } from 'react';\nimport { Context } from \"./components/Wrapper\";\n\n// import ShowAnswers from './ShowAnswers'\nimport { Container, Checkbox } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport './App.css';\n// import Tentit from 'user/Tentit.js'\nimport Tentit from './Tentit.js'\nimport Register from './Register.js'\nimport Login from './Login.js'\nimport { FormattedMessage, FormattedDate } from 'react-intl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nfunction App(props) {\n  const context = useContext(Context);\n  const [dataFromNodeServer, setDataFromNodeServer] = useState([]);\n  const [dataFromNodeServerFormatted, setDataFromNodeServerFormatted] = useState(false);\n  const [state, dispatch] = useReducer(reducer, []);\n  const exams = [];\n  const [alertOpen, setAlertOpen] = useState(false)\n  const [alertMessage, setAlertMessage] = useState(\"\")\n  const client = new W3CWebSocket(\"ws://localhost:3001\")\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\nuseEffect(() => {\n  client.onopen = (e) => {\n    console.log(\"WebSocket connection open.\")\n  }\n  client.onmessage = (e) => {\n    console.log(\"client.onmessage \", e.data)\n    setAlertMessage(e.data)\n    setAlertOpen(true)\n    \n   \n  }\n},[client.onChange])\n\nfunction showAlert(e) {\n    \n \n}\n\n  \n\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case 'INIT_DATA':\n        return action.data;\n      default:\n        throw new Error();\n    }\n\n  }\n\n  function handleClose(event, reason){\n/*     if (reason === 'clickaway') {\n      return;\n    } */\n\n    setAlertOpen(false);\n  }\n\n  function HomeIcon(props) {\n    return (\n      <SvgIcon {...props}>\n        <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n      </SvgIcon>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n\n\n      <Router>\n        <div>\n          <nav>\n\n\n            <Button component={Link} to=\"/\" ><HomeIcon color=\"action\"></HomeIcon></Button>\n            <Button component={Link} to='/tentit'>\n              <FormattedMessage\n                id=\"tentit.button\"\n                defaultMessage=\"Tentit\"\n                description=\"Navigation/exams button\"\n              ></FormattedMessage></Button>\n            <Button component={Link} to='/login' ><FormattedMessage\n              id=\"login.button\"\n              defaultMessage=\"Kirjaudu\"\n              description=\"Navigation/login button\"\n            ></FormattedMessage></Button>\n            <Button component={Link} to='/register'><FormattedMessage\n              id=\"register.button\"\n              defaultMessage=\"Rekisteröidy\"\n              description=\"Navigation/register button\"\n            ></FormattedMessage></Button>\n            \n            <select className=\"language-selector\" value={context.locale} onChange={context.selectLanguage}>\n              <option value='en-gb'>English</option>\n              <option value='fi'>suomi</option>\n              <option value='vi'>Tiếng Việt</option>\n            </select>\n            <text className=\"date-time\"><FormattedDate\n              \n              value = {props.date}\n              year = 'numeric'\n              month = 'numeric'\n              day = 'numeric'\n              weekday = 'long'\n              ></FormattedDate></text>\n            \n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/tentit\">\n              <Tentit />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n\n      <div>\n      {console.log(\"Renderöinnin viesti:\", alertMessage)}\n    <Snackbar open={alertOpen} onClose={handleClose} autoHideDuration={3000} anchorOrigin={{\n         vertical: 'bottom',\n         horizontal: 'left',\n       }} > \n     <Alert severity=\"info\"><FormattedMessage\n     \n              id={alertMessage.toString()}\n              \n              description=\"Translations for alert messages\"\n            ></FormattedMessage></Alert>\n    </Snackbar> </div> \n\n\n    </div>\n\n\n\n\n\n  );\n}\nfunction Home() {\n  return null;\n}\n\n\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\nexport default App;\n\n\n\n\n// pyryn malli (ei käytössä)\n\n/*   useEffect(() => {\n      const fetchData = async () => {\n        try {\n          let result = await axios.get(\"http://localhost:5000/tentit/\")\n          \n          // pyöritellään kyselyt auki pyryn mallilla (tm)\n          if (result.data.length > 0) {\n            for (var i = 0; i<result.data.length; i++){\n              result.data[i].exam = []\n              console.log(\"result.data[i].id: \" + result.data[i].id)\n              let questions = await axios.get(\"http://localhost:5000/kysymykset/\" + result.data[i].id.toString())\n              result.data[i].exam = questions.data\n              console.log(\"result.data[i].exam \", result.data[i].exam )\n              console.log(\"questions.data\", questions.data)\n              console.log(\"i\",i)\n              console.log(\"result.data[i].exam.length \",result.data[i].exam.length )\n              if (result.data[i].exam.length > 0){\n                for (var j=0; i<result.data[i].exam.length-1; j++){\n                  console.log(\"j\",j)\n                  result.data[i].exam[j].answers = []\n                  console.log(\"result.data[i].exam[j].answers \",result.data[i].exam[j].answers )\n                  console.log(\"result.data[i].exam[j]\" , result.data[i].exam[j])\n                  console.log(\"result.data[i].exam[j].id\", result.data[i].exam[j].id)\n                  console.log(\"i\",i)\n                  console.log(\"nimi\", result.data[i].exam[j].teksti)\n                  console.log(\"kysymyksen id\", result.data[i].exam[j].id)\n                  let answers = await axios.get(\"http://localhost:5000/vastaukset/\" + result.data[i].exam[j].id)\n                  console.log(result.data[i].exam[j].answers = answers.data)\n                  result.data[i].exam[j].answers = answers.data\n                  console.log(\"answers\", result.data[i].exam[j].answers)\n                  console.log(\"answers.data\", answers.data)\n                }\n              }\n              console.log(result.data)\n              setDataFromNodeServer(result.data[0].nimi)\n              setDataFromNodeServerFormatted(true);\n            }\n  \n            dispatch({ type: \"INIT_DATA\", data: result.data })\n            console.log(\"pyörittelyn jälkeen: \", result.data)\n          } else {\n            throw console.log(\"Dataa ei saatu palvelimelta.\")\n            }\n          }\n          catch (exception) {\n            console.log(\"virhe:\",exception)\n          }\n  \n        }\n        fetchData()\n      }, [])\n   */\n\n\n  /*     useEffect(() => {\n        const updateData = async () => {\n          try {\n            let result = await axios.get(\"http://localhost:5000/tentit/\")\n            \n            // pyöritellään kyselyt auki\n            if (result.data.length > 0) {\n              for (var i = 0; i<result.data.length; i++){\n                result.data[i].exam = []\n                console.log(result.data[i].id)\n                let questions = await axios.get(\"http://localhost:5000/kysymykset/\" + result.data[i].id.toString())\n                result.data[i].exam = questions.data\n    \n                if (result.data[i].exam.length > 0){\n                  for (var j=0; i<result.data[i].exam.length; j++){\n                    result.data[i].exam[j].answers = []\n                    console.log(result.data[i].exam[j])\n                    console.log(result.data[i].exam[j].id)\n                    let answers = await axios.get(\"http://localhost:5000/vastaukset/\" + result.data[i].exam[j].id.toString())\n                    \n                    result.data[i].exam[j].answers = answers.data\n                  }\n                }\n                console.log(result.data)\n                setDataFromNodeServer(result.data)\n                setDataFromNodeServerFormatted(true);\n                \n              }\n              dispatch({ type: \"INIT_DATA\", data: result.data })\n              console.log(\"pyörittelyn jälkeen: \", result.data)\n            } else {\n              throw console.log(\"Dataa ei saatu palvelimelta.\")\n              }\n            }\n            catch (exception) {\n              console.log(exception)\n            }\n    \n          }\n          \n        }, [state]) */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport Dropzone from './Dropzone'\nimport {IntlProvider} from \"react-intl\";\n\nimport Wrapper from \"./components/Wrapper\";\nimport Finnish from './lang/fi.json'\nimport Vietnamese from './lang/vi.json'\n\n\n\n// import tentit from './Tentit'\n// import kysymykset from './Kysymykset'\n/* import AppJSONserver from './AppJSONserver'\nimport AppLocalStorage from './AppLocalStorage';\nimport LocalStorageChartDemo from './LocalStorageChartDemo'\n *//*import AdminLocalStorage from './AdminLocalStorage'; */\n\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  \n    { <Wrapper>\n       <App date = {Date.now()} />\n       </Wrapper> }\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}