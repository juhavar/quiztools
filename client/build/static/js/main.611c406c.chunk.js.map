{"version":3,"sources":["components/Wrapper.js","AxiosKutsut.js","Vastaukset.js","Kysymykset.js","user/UserVastaukset.js","user/UserKysymykset.js","Tentit.js","Register.js","Login.js","App.js","index.js"],"names":["Context","React","createContext","Wrapper","props","useState","locale","setLocale","messages","setMessages","Provider","value","selectLanguage","e","newLocale","target","Finnish","Vietnamese","English","children","host","login","userData","a","axios","post","result","data","register","etunimi","sukunimi","email","salasana","admin","console","log","examID","delete","exception","addQuestion","questionID","event","put","toString","id","item","oikea","handleCheck","vastausteksti","checked","defaults","headers","token","window","localStorage","Vastaukset","useRouteMatch","path","url","answer","setAnswer","useEffect","get","then","response","getAnswer","length","className","map","Checkbox","defaultChecked","onClick","uuid","TextField","label","defaultMessage","description","variant","style","width","defaultValue","onBlur","changeText","deleteAnswer","Kysymykset","questions","setQuestions","exam","setExam","setQuestionID","alertOpen","setAlertOpen","alertText","setAlertText","adminMode","getQuestion","deletionHandler","item_type","item_id","Error","handleClose","Button","color","Paper","maxHeight","overflow","index","teksti","inputProps","readOnly","changeQText","userMode","addAnswer","Dialog","open","close","DialogTitle","DialogContent","DialogContentText","DialogActions","deleteExam","deleteQuestion","autoFocus","UserVastaukset","UserKysymykset","Exam","setExamID","setExamDialogOpen","getExam","component","Link","to","nimi","exact","Register","setUserData","onChange","name","onSubmit","preventDefault","type","Login","history","useHistory","setItem","push","location","reload","Home","App","context","useContext","useReducer","state","action","setToken","userLoggedIn","setUserLoggedIn","HomeIcon","SvgIcon","d","Fragment","removeItem","default","date","year","month","day","weekday","Tentit","ReactDOM","render","StrictMode","Date","now","document","getElementById"],"mappings":"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","file":"static/js/main.611c406c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { IntlProvider } from 'react-intl';\r\nimport Finnish from '../lang/fi.json'\r\nimport Vietnamese from '../lang/vi.json'\r\nimport English from '../lang/en.json'\r\n\r\nexport const Context = React.createContext();\r\n\r\n//const local = navigator.language;\r\n/* \r\nlet lang;\r\nif (local === 'fi') {\r\n   lang = Finnish;\r\n}else {\r\n   if (local === 'vn') {\r\n       lang = Vietnamese;\r\n   } else {\r\n       lang = English;\r\n   }\r\n}\r\n */\r\nconst Wrapper = (props) => {\r\n    const [locale, setLocale] = useState('fi');\r\n    const [messages, setMessages] = useState('fi');\r\n\r\n    function selectLanguage(e) {\r\n        const newLocale = e.target.value;\r\n        setLocale(newLocale);\r\n        if (newLocale === 'fi') {\r\n            setMessages(Finnish);\r\n        } else {\r\n            if (newLocale === 'vi') {\r\n                setMessages(Vietnamese);\r\n\r\n            } else {\r\n                setMessages(English)\r\n            }\r\n        }\r\n    }\r\n        return (\r\n\r\n            <Context.Provider value={{ locale, selectLanguage }}>\r\n                <IntlProvider messages={messages} locale={locale}>\r\n                    {props.children}\r\n                </IntlProvider>\r\n            </Context.Provider>\r\n        );\r\n    \r\n}\r\nexport default Wrapper;","import axios from 'axios';\r\n\r\nvar host = null\r\nswitch (process.env.NODE_ENV) {\r\n  case 'production':\r\n    host = 'https://jv-quiztool.herokuapp.com'\r\n    break\r\n  case 'development':\r\n    host = 'http://localhost:5000'\r\n    break\r\n  case 'test':\r\n    host = 'http://localhost:5000'\r\n    break\r\n  default:\r\n    throw \"Environment not properly set!\"\r\n    break\r\n}\r\n\r\naxios.defaults.headers = {\r\n  'Content-type': 'application/json',\r\n  token: window.localStorage.token,\r\n  admin: window.localStorage.admin\r\n}\r\n\r\nexport async function getExam() {\r\n  console.log(\"kukkuu\")\r\n  try {\r\n    axios\r\n      .get(host + \"/tentit\")\r\n      .then(response => {\r\n        console.log(\"response.data\", response.data)\r\n        return response.data\r\n      })\r\n  }\r\n  catch(exception){\r\n    console.log(\"Error\")\r\n  }\r\n}\r\n\r\nexport async function login(userData) {\r\n  \r\n  try {\r\n    let result = \r\n    await axios\r\n      .post(host + `/login/`, userData)\r\n    return result.data\r\n  }\r\n  catch (exception){\r\n    return exception\r\n  }\r\n}\r\n\r\nexport async function register(userData) {\r\n  try {\r\n    let result = \r\n    await\r\n        axios\r\n            .post(host + `/register/${userData.etunimi}/${userData.sukunimi}/${userData.email}/${userData.salasana}/${userData.admin}`)\r\n\r\n} catch (e) {\r\n    console.log(\"registration error\")\r\n}\r\n}\r\n\r\nexport async function addExam(examName) {\r\n  try {\r\n    axios\r\n      .post(host + `/lisaatentti/${examName}`)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"Tentin lisääminen mättää\")\r\n  }\r\n}\r\n\r\nexport async function changeExamName(examID, examName) {\r\n  try {\r\n    axios\r\n      .put(host + `/muokkaatentti/${examID}/${examName}`)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"Tentin nimen vaihto mättää\")\r\n  }\r\n}\r\n\r\nexport async function deleteExam(examID) {\r\n  try {\r\n    axios\r\n      .delete(host + `/poistatentti/${examID}`)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"Tentin poistossa häikkää\")\r\n  }\r\n}\r\n\r\nexport async function addQuestion(examID) {\r\n  try {\r\n    axios\r\n      .post(host + `/lisaakysymys/${examID}/'`)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"Kysymyksen lisäys kosahti\")\r\n  }\r\n\r\n}\r\n\r\nexport async function changeQText(examID, questionID, event) {\r\n  try {\r\n    /*     if (questionText !== event.target.value.toString())\r\n        { */\r\n    //console.log(token)\r\n    axios\r\n      .put(host + `/muokkaakysymys/${examID}/${questionID}/${event.target.value.toString()}`)\r\n\r\n\r\n    /* }\r\n      else return */\r\n  }\r\n  catch (exception) {\r\n    console.log(\"Ei voitu muuttaa kysymyksen tekstiä.\")\r\n  }\r\n}\r\n\r\nexport async function deleteQuestion(questionID) {\r\n  try {\r\n    axios\r\n      .delete(host + `/poistakysymys/${questionID.id}`)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"Ei voitu poistaa kysymystä\")\r\n  }\r\n}\r\n\r\nexport async function addAnswer(examID, questionID) {\r\n  try {\r\n    axios\r\n      .post(host + `/lisaavastaus/${questionID}/' '/false`)\r\n    //setExam(examID)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"Ei voitu lisätä vastausta.\")\r\n  }\r\n}\r\nexport async function changeText(examID, questionID, item, event) {\r\n  //setQuestionID(props.questionID)\r\n  try {\r\n    axios\r\n      .put(host + `/muokkaavastaus/${questionID}/${item.id}/${event.target.value}/${item.oikea}/`)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"ei muutettu vastauksen tekstiä\")\r\n  }\r\n}\r\n\r\nexport async function handleCheck(examID, questionID, item, event) {\r\n  try {\r\n    axios\r\n      .put(host + `/muokkaavastaus/${examID}/${questionID}/${item.id}/${item.vastausteksti}/${event.target.checked}/`)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"oikean vastauksen vaihto ei onnistunut\")\r\n  }\r\n}\r\n\r\nexport async function deleteAnswer(item) {\r\n  try {\r\n    axios\r\n      .delete(host + `/poistavastaus/${item.id}`)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"vastauksen poisto mättää\")\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport uuid from 'react-uuid';\r\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams\r\n  } from \"react-router-dom\";\r\nimport Dropzone from './Dropzone'\r\nimport { changeText, handleCheck, deleteAnswer } from './AxiosKutsut'\r\n\r\n  const Vastaukset = (props) => {\r\n    let {path, url} = useRouteMatch()\r\n    const host = props.host\r\n    const [answer, setAnswer] = useState([])\r\n    const [questionID, setQuestionID] = useState(0)\r\n\r\n\r\n      useEffect(() => {\r\n        const getAnswer = async () =>{\r\n\r\n          axios\r\n            .get(host + \"/vastaukset/\" + props.questionID)\r\n            .then(response => {\r\n              console.log(\"response\", response.data)\r\n              setAnswer(response.data)\r\n            })\r\n        }\r\n        getAnswer()\r\n      },[])\r\n\r\n  \r\n\r\n      \r\n      if (answer.length < 1)\r\n        return <></>\r\n      return (\r\n        <div className = \"Answer-list\" >\r\n            <div>\r\n      {answer.map((item) =>\r\n      <div className=\"answer\">\r\n        <Checkbox\r\n          key={uuid()}\r\n          defaultChecked={item.oikea}\r\n          \r\n          onClick={(event) => handleCheck(props.examID, props.questionID, item, event)} >\r\n        </Checkbox>\r\n\r\n        \r\n\r\n        <TextField \r\n          key={uuid()}\r\n          label={<FormattedMessage\r\n            id=\"answer\"\r\n            defaultMessage=\"Vastaus\"\r\n            description=\"Answer\"\r\n        ></FormattedMessage>}\r\n          variant=\"outlined\"\r\n          style={{width:'90%'}}\r\n          defaultValue={item.vastausteksti}\r\n          onBlur={(event) => changeText(props.examID, props.questionID, item, event)}>\r\n        </TextField>\r\n       \r\n        <DeleteIcon\r\n          key={uuid()}\r\n          onClick={(event) => deleteAnswer(item)}>\r\n\r\n        </DeleteIcon>\r\n      </div>\r\n        )}\r\n        \r\n        </div>\r\n        \r\n\r\n        \r\n        </div>\r\n      )\r\n\r\n\r\n  }\r\n  export default Vastaukset","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from 'axios';\r\nimport Vastaukset from './Vastaukset'\r\nimport uuid from 'react-uuid';\r\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\r\n\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport { addQuestion, changeQText, deleteQuestion, addAnswer, deleteExam } from './AxiosKutsut'\r\n\r\n\r\nconst Kysymykset = (props) => {\r\n  let { path, url } = useRouteMatch()\r\n  const host = props.host\r\n  //const token = localStorage.token\r\n  const [questions, setQuestions] = useState([])\r\n  const [exam, setExam] = useState(0)\r\n  const [questionID, setQuestionID] = useState(null)\r\n  const [alertOpen, setAlertOpen] = useState(false)\r\n  const [alertText, setAlertText] = useState(\"\")\r\n  const adminMode = window.localStorage.admin // \r\n\r\n  useEffect(() => {\r\n    const getQuestion = async () => {\r\n      console.log(\"props.host\", props.host, \"props.examID\", props.examID)\r\n      axios\r\n        .get(host + \"/kysymykset/\" + props.examID)\r\n        .then(response => {\r\n          setQuestions(response.data)\r\n        })\r\n    }\r\n    getQuestion()\r\n  }, [props.examID, exam, setExam, setQuestions])\r\n\r\n  /*   const qClickHandler = (event) => {\r\n      console.log(questionText, event.target.value.toString())\r\n      setQuestionText(event.target.value.toString())\r\n    } */\r\n\r\n  const deletionHandler = (item_type, item_id) => {\r\n\r\n    switch (item_type) {\r\n      case 'exam': {\r\n        setAlertText('delete-exam')\r\n        //deleteExam(item_id)\r\n        break;\r\n      }\r\n      case 'question': {\r\n        setAlertText('delete-question')\r\n        setQuestionID(item_id)\r\n        break;\r\n\r\n      }\r\n\r\n      default:\r\n        throw new Error()\r\n    }\r\n    setAlertOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAlertOpen(false)\r\n  }\r\n\r\n  const confirmDelete = () => {\r\n    switch (alertText) {\r\n      case 'delete-exam': {\r\n        deleteExam(props.examID)\r\n        break;\r\n      }\r\n      case 'delete-question': {\r\n        deleteQuestion(questionID)\r\n        break;\r\n      }\r\n      default: {\r\n        throw new Error()\r\n      }\r\n    }\r\n\r\n    setAlertOpen(false)\r\n  }\r\n\r\n\r\n\r\n  if (questions.length < 1) {\r\n    return <div>\r\n      <div>\r\n        <Button color=\"primary\"\r\n          key={uuid()}\r\n          onClick={() => addQuestion(props.examID)}>{<FormattedMessage\r\n            id=\"add-question\"\r\n            defaultMessage=\"Lisää kysymys\"\r\n            description=\"Add question\"\r\n          ></FormattedMessage>}</Button>\r\n      </div>\r\n\r\n    </div>\r\n  }\r\n  else\r\n    return (\r\n\r\n      <div className=\"Question-list\">\r\n        <Paper style={{ width: '95%', maxHeight: '95%', overflow: 'auto' }}>\r\n          <div>\r\n\r\n            {setExam[props.e]}\r\n\r\n            {questions.map((item, index) =>\r\n\r\n\r\n\r\n              // tekstikentästä poistuminen aiheuttaa verkkoliikennettä vaikkei mitään muuteta\r\n\r\n              <div className=\"Question\">\r\n                <TextField\r\n                  key={uuid()}\r\n                  label={<FormattedMessage\r\n                    id=\"question\"\r\n                    defaultMessage=\"Kysymys\"\r\n                    description=\"Question\"\r\n                  ></FormattedMessage>}\r\n                  style={{ width: '90%' }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={item.teksti}\r\n                  inputProps={{ readOnly: !adminMode }}\r\n                  /*  onClick={(event) => qClickHandler(event)} */\r\n                  onBlur={(event) => changeQText(props.examID, item.id, event)} ></TextField>\r\n                <DeleteIcon\r\n                  key={uuid()}\r\n                  onClick={(event) => deletionHandler('question', item)}>\r\n\r\n                </DeleteIcon>\r\n                <Vastaukset host={host} key={uuid()} examID={props.examID} questionID={item.id} userMode={adminMode}></Vastaukset>\r\n                <div id={item.index}>\r\n                  {!adminMode ? \"\" : <Button key={uuid()} color=\"primary\"\r\n                    onClick={() => addAnswer(props.examID, item.id)}>{<FormattedMessage\r\n                      id=\"add-answer\"\r\n                      defaultMessage=\"Lisää vastaus\"\r\n                      description=\"Add answer\"\r\n                    ></FormattedMessage>}</Button>\r\n\r\n                  }\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <Button color=\"primary\"\r\n              key={uuid()}\r\n              onClick={() => addQuestion(props.examID)}>{<FormattedMessage\r\n                id=\"add-question\"\r\n                defaultMessage=\"Lisää kysymys\"\r\n                description=\"Add question\"\r\n              ></FormattedMessage>}</Button>\r\n          </div>\r\n          <div>\r\n            <Button color=\"primary\"\r\n              key={uuid()}\r\n              onClick={(event) => deletionHandler('exam', props.examID)}>{<FormattedMessage\r\n                id=\"delete-exam\"\r\n                defaultMessage=\"Poista tentti\"\r\n                description=\"Delete exam\"\r\n              ></FormattedMessage>}</Button>\r\n\r\n            <Dialog\r\n              open={alertOpen}\r\n              close={handleClose}\r\n            >\r\n\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {<FormattedMessage\r\n                  id={alertText}\r\n\r\n                ></FormattedMessage>}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  {<FormattedMessage\r\n                    id=\"delete-warning\"\r\n                    defaultMessage=\"Huomio! Toiminto on peruuttamaton!\"\r\n                    description=\"Confirm and delete exam\"\r\n                  ></FormattedMessage>}\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={confirmDelete} color=\"primary\">{<FormattedMessage\r\n                  id=\"alert-confirm\"\r\n                  defaultMessage=\"Poista tentti\"\r\n                  description=\"Confirm and delete exam\"\r\n                ></FormattedMessage>}\r\n\r\n                </Button>\r\n                <Button onClick={handleClose} color=\"primary\" autoFocus >{<FormattedMessage\r\n                  id=\"alert-cancel\"\r\n                  defaultMessage=\"Peruuta\"\r\n                  description=\"Cancel deletion\"\r\n                ></FormattedMessage>}\r\n\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        </Paper>\r\n      </div>\r\n\r\n    )\r\n}\r\nexport default Kysymykset","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport uuid from 'react-uuid';\r\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams\r\n  } from \"react-router-dom\";\r\nimport Dropzone from '../Dropzone'\r\nimport { changeText, handleCheck, deleteAnswer } from '../AxiosKutsut'\r\n\r\n  const UserVastaukset = (props) => {\r\n    let {path, url} = useRouteMatch()\r\n    const host = props.host\r\n    const [answer, setAnswer] = useState([])\r\n    const [questionID, setQuestionID] = useState(0)\r\n\r\n\r\n      useEffect(() => {\r\n        \r\n          const getAnswer = async () =>{\r\n            try{\r\n          axios\r\n            .get(host + \"/vastaukset/\" + props.questionID)\r\n            .then(response => {\r\n              console.log(\"response\", response.data)\r\n              setAnswer(response.data)\r\n            })\r\n        }\r\n        catch(exception){\r\n          console.log(exception)\r\n        }\r\n      }\r\n     \r\n        getAnswer()\r\n      },[])\r\n\r\n  \r\n\r\n      \r\n      if (answer.length < 1)\r\n        return <></>\r\n      return (\r\n        <div className = \"Answer-list\" >\r\n            <div>\r\n      {answer.map((item) =>\r\n      <div className=\"user-answer\">\r\n        <Checkbox\r\n          key={uuid()}\r\n          //defaultChecked={item.oikea}\r\n          \r\n          onClick={(event) => handleCheck(props.examID, props.questionID, item, event)} >\r\n        </Checkbox>\r\n\r\n        \r\n\r\n        <TextField \r\n          key={uuid()}\r\n          label={<FormattedMessage\r\n            id=\"answer\"\r\n            defaultMessage=\"Vastaus\"\r\n            description=\"Answer\"\r\n        ></FormattedMessage>}\r\n          variant=\"outlined\"\r\n          style={{ width:'90%' }}\r\n          inputProps={{ readOnly: true }}\r\n          defaultValue={item.vastausteksti}\r\n          >\r\n        </TextField>\r\n       \r\n    \r\n      </div>\r\n        )}\r\n        \r\n        </div>\r\n        \r\n\r\n        \r\n        </div>\r\n      )\r\n\r\n\r\n  }\r\n  export default UserVastaukset","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport UserVastaukset from './UserVastaukset'\r\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nconst UserKysymykset = (props) => {\r\n  let { path, url } = useRouteMatch()\r\n  const [questions, setQuestions] = useState([])\r\n  const [questionID, setQuestionID] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const getQuestion = async () => {\r\n      console.log(\"props.host\", props.host, \"props.examID\", props.examID)\r\n      axios\r\n        .get(props.host + \"/kysymykset/\" + props.examID)\r\n        .then(response => {\r\n          setQuestions(response.data)\r\n        })\r\n    }\r\n    getQuestion()\r\n  }, [url])\r\n\r\n  const questionIDsetter = (id) => {\r\n    setQuestions(id)\r\n  }\r\n\r\n  if (questions.length < 1)\r\n    return <>loading... q2</>\r\n  return (\r\n    <div className=\"Question list\">\r\n\r\n\r\n      <div>\r\n        {questions.map((item, index) =>\r\n          <div>\r\n            <TextField\r\n              label={<FormattedMessage\r\n                id=\"question\"\r\n                defaultMessage=\"Kysymys\"\r\n                description=\"Question\"\r\n            ></FormattedMessage>}\r\n              variant=\"outlined\"\r\n              value={item.teksti}\r\n              style={{ width: '91%' }}\r\n              inputProps={{ readOnly: true }} ></TextField>\r\n            <UserVastaukset questionID={item.id} host={props.host}></UserVastaukset>\r\n\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <Button color=\"primary\">Näytä vastaukset</Button>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default UserKysymykset","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport uuid from 'react-uuid';\r\nimport axios from 'axios';\r\nimport Kysymykset from './Kysymykset'\r\nimport UserKysymykset from './user/UserKysymykset'\r\nimport { FormattedMessage, FormattedDate } from 'react-intl';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { addExam, changeExamName, deleteExam } from './AxiosKutsut';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nconst Exam = (props) => {\r\n  let { path, url } = useRouteMatch()\r\n  const host = props.host\r\n  const [exam, setExam] = useState([])\r\n  const [examID, setExamID] = useState()\r\n  const [examDialogOpen, setExamDialogOpen] = useState(false)\r\n  const [examName, setExamName] = useState(\"\")\r\n  const token = window.localStorage.token\r\n  const admin = window.localStorage.admin\r\n\r\n  useEffect(() => {\r\n\r\n    const getExam = async () => {\r\n      console.log(props)\r\n      axios\r\n        .get(host + \"/tentit\", { headers: { token: token }, admin: admin })\r\n        .then(response => {\r\n          setExam(response.data)\r\n        })\r\n    }\r\n    getExam()\r\n  }, [examID])\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    console.log(\"huhuu\")\r\n\r\n    setExamDialogOpen(true)\r\n  }\r\n\r\n  const handleClose = (examName) => {\r\n    setExamDialogOpen(false)\r\n    console.log(\"dialogi kiinni\")\r\n    if (examName)\r\n      addExam(examName)\r\n\r\n  }\r\n\r\n  /*   const userMode = () => {\r\n     if (window.localStorage.admin === (\"true\" || true)) {\r\n  \r\n        return <Kysymykset examID={examID} host={host}></Kysymykset>\r\n     }\r\n      else{\r\n        \r\n         return <UserKysymykset examID={examID} host={host}></UserKysymykset>\r\n      }\r\n      \r\n    }  */\r\n\r\n  if (exam.length < 1)\r\n    return <>loading...</>\r\n  return (\r\n\r\n    <div className=\"Exam-list\">\r\n\r\n      <div>\r\n        {exam.map((item, index) =>\r\n\r\n          <Button component={Link} to={`${url}/${item.id}`} key={uuid()} color=\"primary\"\r\n            onClick={() => setExamID(item.id)} >\r\n            {item.nimi}</Button>\r\n        )}\r\n\r\n\r\n        {window.localStorage.admin === \"true\" ?\r\n          <Button color=\"primary\"\r\n            onClick={handleClickOpen}\r\n          >\r\n            +\r\n                  </Button>\r\n          : null}\r\n\r\n\r\n        {/* <ExamDialog examName={examName} open={examDialogOpen} onClose={handleClose}></ExamDialog> */}\r\n\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route exact path={path}>\r\n        </Route>\r\n        <Route path={`${path}/:id`} >\r\n          {window.localStorage.admin === (\"true\" || true) ?\r\n\r\n            <Kysymykset examID={examID} host={host}></Kysymykset>\r\n\r\n            :\r\n\r\n            <UserKysymykset examID={examID} host={host}></UserKysymykset>\r\n          }\r\n\r\n        </Route>\r\n      </Switch>\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default Exam\r\n\r\n/* function ExamDialog(props) {\r\n  const { open, onClose, examName } = props\r\n\r\n  const handleClose = () => {\r\n    onClose(examName)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {console.log(\"examdialog\")}\r\n      <Dialog open={open} onClose={handleClose} >\r\n        <DialogTitle id=\"newExamDialog\">{\r\n        <FormattedMessage\r\n\r\n          id=\"new-exam-title\"\r\n          description=\"Translation for new exam input\"\r\n        ></FormattedMessage>}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField key={uuid()}\r\n\r\n          >{examName}</TextField>\r\n        </DialogContent>\r\n        <DialogActions><Button onClick={handleClose}>\r\n          Uus tentti\r\n      </Button>\r\n          <Button onClick={handleClose()}>Peruuta</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n} */","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\r\nimport { register } from './AxiosKutsut';\r\n\r\nconst Register = () => {\r\n    const [userData, setUserData] = useState({\r\n        etunimi: '',\r\n        sukunimi: '',\r\n        email: '',\r\n        salasana: '',\r\n        admin: ''\r\n    })\r\n\r\n    const onChange = (e) => {\r\n        setUserData({ ...userData, [e.target.name]: e.target.value })\r\n    }\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        register(userData)\r\n        /* try {\r\n\r\n            await\r\n                axios\r\n                    .post(`http://localhost:5000/register/${userData.etunimi}/${userData.sukunimi}/${userData.email}/${userData.salasana}/${userData.admin}`)\r\n\r\n        } catch (e) {\r\n            console.log(\"registration error\")\r\n        } */\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"Register\">\r\n                <form onSubmit={onSubmit}>\r\n                    <div>\r\n                        <TextField name=\"etunimi\" label={<FormattedMessage\r\n                            id=\"firstName\"\r\n                            defaultMessage=\"Etunimi\"\r\n                            description=\"First name\"\r\n                        ></FormattedMessage>}\r\n                            onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n                    <div>\r\n                        <TextField name=\"sukunimi\" label={<FormattedMessage\r\n                            id=\"surName\"\r\n                            defaultMessage=\"Sukunimi\"\r\n                            description=\"Last name\"\r\n                        ></FormattedMessage>}\r\n                            onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n                    <div>\r\n                        <TextField name=\"email\" label={<FormattedMessage\r\n                            id=\"email\"\r\n                            defaultMessage=\"Sähköpostiosoite\"\r\n                            description=\"Email\"\r\n                        ></FormattedMessage>}\r\n                            onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n                    <div>\r\n                        <TextField name=\"salasana\" label={<FormattedMessage\r\n                            id=\"password\"\r\n                            defaultMessage=\"Salasana\"\r\n                            description=\"Password\"\r\n                        ></FormattedMessage>} type=\"password\"\r\n                            onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n                    <div><TextField name=\"admin\" label={<FormattedMessage\r\n                            id=\"admin\"\r\n                            defaultMessage=\"Opettaja\"\r\n                            description=\"Teacher password\"\r\n                        ></FormattedMessage>}\r\n                        onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n\r\n                    <Button onClick={onSubmit}>\r\n                        <FormattedMessage\r\n                            id=\"register.button\"\r\n                            defaultMessage=\"Rekisteröidy\"\r\n                            description=\"Register/register button\"\r\n                        ></FormattedMessage>\r\n                    </Button>\r\n                </form>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Register","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { login } from './AxiosKutsut';\r\n\r\nconst Login = (props) => {\r\n\r\n    const [token, setToken] = useState(null);\r\n    const [userLogin, setUserLogin] = useState(false)\r\n\r\n    //setUserLogin(props.userLoggedIn)\r\n\r\n    const [userData, setUserData] = useState({\r\n        email: '',\r\n        salasana: '',\r\n    })\r\n    const history = useHistory();\r\n\r\n    const onChange = (e) => {\r\n        setUserData({ ...userData, [e.target.name]: e.target.value })\r\n    }\r\n    const onSubmit = async (e) => {\r\n        \r\n        try {\r\n            e.preventDefault()\r\n\r\n            let response = await login(userData)\r\n\r\n            // siirretty\r\n            /* await\r\n                axios\r\n                    .post(props.host + `/login/`, userData)\r\n             */\r\n            console.log(response)\r\n            let token = await response\r\n            window.localStorage.setItem('token', response.token)\r\n            window.localStorage.setItem('admin', response.admin)\r\n            history.push('/')\r\n            //setUserLogin(true)\r\n            \r\n            window.location.reload()\r\n            \r\n        } catch (e) {\r\n            console.log(\"registration error\")\r\n        }\r\n    }\r\n\r\n    const testaaToken = async () => {\r\n       \r\n        try {\r\n            //e.preventDefault()\r\n\r\n            const response =\r\n            await\r\n                axios\r\n                    .get(props.host + `/tokentestaus/`, {headers: {token: localStorage.token}})\r\n            \r\n            console.log(response)\r\n            \r\n        } catch (e) {\r\n            console.log(\"ei toimi\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <div>\r\n                <TextField name=\"email\" label={<FormattedMessage\r\n                            id=\"email\"\r\n                            defaultMessage=\"Sähköpostiosoite\"\r\n                            description=\"email address\"\r\n                        ></FormattedMessage>}\r\n                    onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n            <div>\r\n                <TextField name=\"salasana\" label={<FormattedMessage\r\n                            id=\"password\"\r\n                            defaultMessage=\"Salasana\"\r\n                            description=\"Password\"\r\n                        ></FormattedMessage>} type=\"password\"\r\n                    onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n\r\n            <div><Button onClick={onSubmit}>{<FormattedMessage\r\n                            id=\"login.button\"\r\n                            defaultMessage=\"Kirjaudu sisään\"\r\n                            description=\"Login button\"\r\n                        ></FormattedMessage>}</Button></div>\r\n\r\n            {/* <div><Button onClick={testaaToken}>Tokenin testaus</Button></div>\r\n            \r\n            {localStorage.token}  */}\r\n            \r\n            </div>\r\n\r\n    )\r\n}\r\nexport default Login","import React, { useEffect, useReducer, useContext } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport { useState } from 'react';\nimport { Context } from \"./components/Wrapper\";\n\n// import ShowAnswers from './ShowAnswers'\nimport { Container, Checkbox } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport './App.css';\n// import Tentit from 'user/Tentit.js'\nimport Tentit from './Tentit.js'\nimport Register from './Register.js'\nimport Login from './Login.js'\nimport { FormattedMessage, FormattedDate } from 'react-intl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n//import { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\n\n\n\n\nfunction App(props) {\n\n  var host = null\n  switch (process.env.NODE_ENV) {\n    case 'production':\n      host = 'https://jv-quiztool.herokuapp.com'\n      break\n    case 'development':\n      host = 'http://localhost:5000'\n      break\n    case 'test':\n      host = 'http://localhost:5000'\n      break\n    default:\n      throw \"Environment not properly set!\"\n      break\n  }\n\n  const context = useContext(Context);\n  const [dataFromNodeServer, setDataFromNodeServer] = useState([]);\n  const [dataFromNodeServerFormatted, setDataFromNodeServerFormatted] = useState(false);\n  const [state, dispatch] = useReducer(reducer, []);\n  const [token, setToken] = useState(null);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n  const exams = [];\n\n\n/*   tässä kohtaa oli totetutus websocket-pohjaisille ilmoituksille, mutta\n   ne ei toimi Herokussa joten kommentoitu pois */\n/*   const [alertOpen, setAlertOpen] = useState(false)\n  const [alertMessage, setAlertMessage] = useState(\"\")\n  const client = new W3CWebSocket(`ws://${host}:3001`)\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\nuseEffect(() => {\n  client.onopen = (e) => {\n    console.log(\"WebSocket connection open.\")\n  }\n  client.onmessage = (e) => {\n    console.log(\"client.onmessage \", e.data)\n    setAlertMessage(e.data)\n    setAlertOpen(true)\n    \n   \n  }\n},[client.onChange]) \n\nfunction showAlert(e) {\n    \n \n} */\n \n\n  useEffect(() => {\n    //setToken(window.localStorage.getItem('token'))\n    \n    if (token === null) {\n      setUserLoggedIn(false)\n    }\n    else\n      setUserLoggedIn(true)\n  }, [token, userLoggedIn])\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case 'INIT_DATA':\n        return action.data;\n      default:\n        throw new Error();\n    }\n\n  }\n\n  const logIn = () => {\n    setUserLoggedIn(true)\n  }\n  const logOut = () => {\n    window.localStorage.removeItem('admin')\n    window.localStorage.removeItem('token')\n    setToken(null)\n    setUserLoggedIn(false)\n  }\n  \n  // websocket-viesti-ikkunan sulkija\n/*     function handleClose(event, reason){\n      if (reason === 'clickaway') {\n        return;\n      } \n  \n      setAlertOpen(false);\n    } */\n \n  function HomeIcon(props) {\n    return (\n      <SvgIcon {...props}>\n        <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n      </SvgIcon>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n\n\n      <Router >\n        \n        <div>\n          <nav>\n\n\n            <Button component={Link} to=\"/\" ><HomeIcon color=\"action\"></HomeIcon></Button>\n\n            {userLoggedIn\n              ?\n              <React.Fragment>\n                <Button component={Link} to='/tentit'>\n                  <FormattedMessage\n                    id=\"tentit.button\"\n                    defaultMessage=\"Tentit\"\n                    description=\"Navigation/exams button\"\n                  ></FormattedMessage></Button>\n\n                <Button onClick={logOut} component={Link} to=\"/\">\n                  <FormattedMessage\n                    id=\"logout.button\"\n                    defaultMessage=\"Poistu\"\n                    description=\"Log out button\"\n                  ></FormattedMessage></Button>\n\n              </React.Fragment>\n              :\n              <React.Fragment>\n                <Button component={Link} to='/login' ><FormattedMessage\n                  id=\"login.button\"\n                  defaultMessage=\"Kirjaudu\"\n                  description=\"Navigation/login button\"\n                ></FormattedMessage></Button>\n                <Button component={Link} to='/register'><FormattedMessage\n                  id=\"register.button\"\n                  defaultMessage=\"Rekisteröidy\"\n                  description=\"Navigation/register button\"\n                ></FormattedMessage></Button>\n              </React.Fragment>\n            }\n\n\n\n\n\n            <select className=\"language-selector\" value={context.locale} onChange={context.selectLanguage}>\n              <option value='en-gb'>English</option>\n              <option default value='fi'>suomi</option>\n              <option value='vi'>Tiếng Việt</option>\n            </select>\n            <text className=\"date-time\"><FormattedDate\n\n              value={props.date}\n              year='numeric'\n              month='numeric'\n              day='numeric'\n              weekday='long'\n            ></FormattedDate></text>\n\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch >\n            <Route path=\"/register\">\n              <Register host={host} />\n            </Route>\n            <Route path=\"/login\">\n              <Login host={host} userLoggedIn={userLoggedIn} onChange={logIn}/>\n            </Route>\n            <Route path=\"/tentit\">\n              <Tentit host={host} />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n\n      {/* {\n      \n      \n      <div>\n      {console.log(\"Renderöinnin viesti:\", alertMessage)}\n    <Snackbar open={alertOpen} onClose={handleClose} autoHideDuration={3000} anchorOrigin={{\n         vertical: 'bottom',\n         horizontal: 'left',\n       }} > \n     <Alert severity=\"info\"><FormattedMessage\n     \n              id={alertMessage.toString()}\n              \n              description=\"Translations for alert messages\"\n            ></FormattedMessage></Alert>\n    </Snackbar> </div> \n }\n */}\n    </div>\n\n\n\n\n\n  );\n}\nfunction Home() {\n  return null;\n}\n\n\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\nexport default App;\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport Dropzone from './Dropzone'\nimport {IntlProvider} from \"react-intl\";\n\nimport Wrapper from \"./components/Wrapper\";\nimport Finnish from './lang/fi.json'\nimport Vietnamese from './lang/vi.json'\n\n\n\n// import tentit from './Tentit'\n// import kysymykset from './Kysymykset'\n/* import AppJSONserver from './AppJSONserver'\nimport AppLocalStorage from './AppLocalStorage';\nimport LocalStorageChartDemo from './LocalStorageChartDemo'\n *//*import AdminLocalStorage from './AdminLocalStorage'; */\n\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  \n    { <Wrapper>\n       <App date = {Date.now()} />\n       </Wrapper> }\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}