{"version":3,"sources":["components/Wrapper.js","AxiosKutsut.js","Vastaukset.js","Kysymykset.js","Tentit.js","Register.js","Login.js","App.js","index.js"],"names":["Context","React","createContext","Wrapper","props","useState","locale","setLocale","messages","setMessages","Provider","value","selectLanguage","e","newLocale","target","Finnish","Vietnamese","English","children","host","getExam","a","console","log","axios","get","then","response","data","exception","login","userData","post","result","register","etunimi","sukunimi","email","salasana","admin","examID","delete","addQuestion","questionID","event","put","toString","id","item","oikea","vastausteksti","checked","defaults","headers","token","localStorage","Vastaukset","useRouteMatch","path","url","answer","setAnswer","useEffect","getAnswer","length","className","map","Checkbox","defaultChecked","onClick","handleCheck","uuid","TextField","label","defaultMessage","description","variant","style","width","defaultValue","onBlur","changeText","deleteAnswer","Kysymykset","questions","setQuestions","exam","setExam","setQuestionID","alertOpen","setAlertOpen","alertText","setAlertText","getQuestion","deletionHandler","item_type","item_id","Error","handleClose","Button","color","Paper","index","teksti","changeQText","addAnswer","Dialog","open","close","DialogTitle","DialogContent","DialogContentText","DialogActions","deleteExam","deleteQuestion","autoFocus","Exam","setExamID","setExamDialogOpen","getMenu","undefined","component","Link","to","nimi","exact","Register","setUserData","onChange","name","onSubmit","preventDefault","type","Login","history","useHistory","setItem","push","window","location","reload","Home","App","context","useContext","useReducer","state","action","setToken","userLoggedIn","setUserLoggedIn","HomeIcon","SvgIcon","d","getItem","Fragment","removeItem","default","date","year","month","day","weekday","Tentit","ReactDOM","render","StrictMode","Date","now","document","getElementById"],"mappings":"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","file":"static/js/main.562b70cd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { IntlProvider } from 'react-intl';\r\nimport Finnish from '../lang/fi.json'\r\nimport Vietnamese from '../lang/vi.json'\r\nimport English from '../lang/en.json'\r\n\r\nexport const Context = React.createContext();\r\n\r\n//const local = navigator.language;\r\n/* \r\nlet lang;\r\nif (local === 'fi') {\r\n   lang = Finnish;\r\n}else {\r\n   if (local === 'vn') {\r\n       lang = Vietnamese;\r\n   } else {\r\n       lang = English;\r\n   }\r\n}\r\n */\r\nconst Wrapper = (props) => {\r\n    const [locale, setLocale] = useState('fi');\r\n    const [messages, setMessages] = useState('fi');\r\n\r\n    function selectLanguage(e) {\r\n        const newLocale = e.target.value;\r\n        setLocale(newLocale);\r\n        if (newLocale === 'fi') {\r\n            setMessages(Finnish);\r\n        } else {\r\n            if (newLocale === 'vi') {\r\n                setMessages(Vietnamese);\r\n\r\n            } else {\r\n                setMessages(English)\r\n            }\r\n        }\r\n    }\r\n        return (\r\n\r\n            <Context.Provider value={{ locale, selectLanguage }}>\r\n                <IntlProvider messages={messages} locale={locale}>\r\n                    {props.children}\r\n                </IntlProvider>\r\n            </Context.Provider>\r\n        );\r\n    \r\n}\r\nexport default Wrapper;","import axios from 'axios';\r\n\r\nvar host = null\r\nswitch (process.env.NODE_ENV) {\r\n  case 'production':\r\n    host = 'https://jv-quiztool.herokuapp.com'\r\n    break\r\n  case 'development':\r\n    host = 'http://localhost:5000'\r\n    break\r\n  case 'test':\r\n    host = 'http://localhost:5000'\r\n    break\r\n  default:\r\n    throw \"Environment not properly set!\"\r\n    break\r\n}\r\n\r\naxios.defaults.headers = {\r\n  'Content-type': 'application/json',\r\n  token: localStorage.token,\r\n  admin: localStorage.admin\r\n}\r\n\r\nexport async function getExam() {\r\n  console.log(\"kukkuu\")\r\n  try {\r\n    axios\r\n      .get(host + \"/tentit\")\r\n      .then(response => {\r\n        return response.data\r\n      })\r\n  }\r\n  catch(exception){\r\n    console.log(\"Error\")\r\n  }\r\n}\r\n\r\nexport async function login(userData) {\r\n  \r\n  try {\r\n    let result = \r\n    await axios\r\n      .post(host + `/login/`, userData)\r\n    return result.data\r\n  }\r\n  catch (exception){\r\n    return exception\r\n  }\r\n}\r\n\r\nexport async function register(userData) {\r\n  try {\r\n    let result = \r\n    await\r\n        axios\r\n            .post(host + `/register/${userData.etunimi}/${userData.sukunimi}/${userData.email}/${userData.salasana}/${userData.admin}`)\r\n\r\n} catch (e) {\r\n    console.log(\"registration error\")\r\n}\r\n}\r\n\r\nexport async function addExam(examName) {\r\n  try {\r\n    axios\r\n      .post(host + `/lisaatentti/${examName}`)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"Tentin lisääminen mättää\")\r\n  }\r\n}\r\n\r\nexport async function changeExamName(examID, examName) {\r\n  try {\r\n    axios\r\n      .put(host + `/muokkaatentti/${examID}/${examName}`)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"Tentin nimen vaihto mättää\")\r\n  }\r\n}\r\n\r\nexport async function deleteExam(examID) {\r\n  try {\r\n    axios\r\n      .delete(host + `/poistatentti/${examID}`)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"Tentin poistossa häikkää\")\r\n  }\r\n}\r\n\r\nexport async function addQuestion(examID) {\r\n  try {\r\n    axios\r\n      .post(host + `/lisaakysymys/${examID}/'`)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"Kysymyksen lisäys kosahti\")\r\n  }\r\n\r\n}\r\n\r\nexport async function changeQText(examID, questionID, event) {\r\n  try {\r\n    /*     if (questionText !== event.target.value.toString())\r\n        { */\r\n    //console.log(token)\r\n    axios\r\n      .put(host + `/muokkaakysymys/${examID}/${questionID}/${event.target.value.toString()}`)\r\n\r\n\r\n    /* }\r\n      else return */\r\n  }\r\n  catch (exception) {\r\n    console.log(\"Ei voitu muuttaa kysymyksen tekstiä.\")\r\n  }\r\n}\r\n\r\nexport async function deleteQuestion(questionID) {\r\n  try {\r\n    axios\r\n      .delete(host + `/poistakysymys/${questionID.id}`)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"Ei voitu poistaa kysymystä\")\r\n  }\r\n}\r\n\r\nexport async function addAnswer(examID, questionID) {\r\n  try {\r\n    axios\r\n      .post(host + `/lisaavastaus/${examID}/${questionID}/' '/false`)\r\n    //setExam(examID)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"Ei voitu lisätä vastausta.\")\r\n  }\r\n}\r\nexport async function changeText(examID, questionID, item, event) {\r\n  //setQuestionID(props.questionID)\r\n  try {\r\n    axios\r\n      .put(host + `/muokkaavastaus/${examID}/${questionID}/${item.id}/${event.target.value}/${item.oikea}/`)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"ei muutettu vastauksen tekstiä\")\r\n  }\r\n}\r\n\r\nexport async function handleCheck(examID, questionID, item, event) {\r\n  try {\r\n    axios\r\n      .put(host + `/muokkaavastaus/${examID}/${questionID}/${item.id}/${item.vastausteksti}/${event.target.checked}/`)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"oikean vastauksen vaihto ei onnistunut\")\r\n  }\r\n}\r\n\r\nexport async function deleteAnswer(item) {\r\n  try {\r\n    axios\r\n      .delete(host + `/poistavastaus/${item.id}`)\r\n  }\r\n  catch (exception) {\r\n    console.log(\"vastauksen poisto mättää\")\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport uuid from 'react-uuid';\r\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\r\n\r\nimport axios from 'axios';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams\r\n  } from \"react-router-dom\";\r\nimport Dropzone from './Dropzone'\r\nimport { changeText, handleCheck, deleteAnswer } from './AxiosKutsut'\r\n\r\n  const Vastaukset = (props) => {\r\n    let {path, url} = useRouteMatch()\r\n    const host = props.host\r\n    const [answer, setAnswer] = useState([])\r\n    const [questionID, setQuestionID] = useState(0)\r\n\r\n\r\n      useEffect(() => {\r\n        const getAnswer = async () =>{\r\n\r\n          axios\r\n            .get(host + \"/vastaukset/\" + props.questionID)\r\n            .then(response => {\r\n              console.log(\"response\", response.data)\r\n              setAnswer(response.data)\r\n            })\r\n        }\r\n        getAnswer()\r\n      },[])\r\n\r\n  \r\n\r\n      \r\n      if (answer.length < 1)\r\n        return <></>\r\n      return (\r\n        <div className = \"Answer-list\" >\r\n            <div>\r\n      {answer.map((item) =>\r\n      <div className=\"answer\">\r\n        <Checkbox\r\n          key={uuid()}\r\n          defaultChecked={item.oikea}\r\n          \r\n          onClick={(event) => handleCheck(props.examID, props.questionID, item, event)} >\r\n        </Checkbox>\r\n\r\n        \r\n\r\n        <TextField \r\n          key={uuid()}\r\n          label={<FormattedMessage\r\n            id=\"answer\"\r\n            defaultMessage=\"Vastaus\"\r\n            description=\"Answer\"\r\n        ></FormattedMessage>}\r\n          variant=\"outlined\"\r\n          style={{width:'90%'}}\r\n          defaultValue={item.vastausteksti}\r\n          onBlur={(event) => changeText(props.examID, props.questionID, item, event)}>\r\n        </TextField>\r\n       \r\n        <DeleteIcon\r\n          key={uuid()}\r\n          onClick={(event) => deleteAnswer(item)}>\r\n\r\n        </DeleteIcon>\r\n      </div>\r\n        )}\r\n        \r\n        </div>\r\n        \r\n\r\n        \r\n        </div>\r\n      )\r\n\r\n\r\n  }\r\n  export default Vastaukset","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from 'axios';\r\nimport Vastaukset from './Vastaukset'\r\nimport uuid from 'react-uuid';\r\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\r\n\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport { addQuestion, changeQText, deleteQuestion, addAnswer, deleteExam } from './AxiosKutsut'\r\n\r\n\r\nconst Kysymykset = (props) => {\r\n  let { path, url } = useRouteMatch()\r\n  const host = props.host\r\n  //const token = localStorage.token\r\n  const [questions, setQuestions] = useState([])\r\n  const [exam, setExam] = useState(0)\r\n  const [questionID, setQuestionID] = useState(null)\r\n  const [alertOpen, setAlertOpen] = useState(false)\r\n  const [alertText, setAlertText] = useState(\"\")\r\n\r\n\r\n  useEffect(() => {\r\n    const getQuestion = async () => {\r\n      //console.log(\"http://localhost:5000/kysymykset/\" + props.examID)\r\n      axios\r\n        .get(host + \"/kysymykset/\" + props.examID)\r\n        .then(response => {\r\n          setQuestions(response.data)\r\n        })\r\n    }\r\n    getQuestion()\r\n  }, [props.examID, exam])\r\n\r\n  /*   const qClickHandler = (event) => {\r\n      console.log(questionText, event.target.value.toString())\r\n      setQuestionText(event.target.value.toString())\r\n    } */\r\n\r\n  const deletionHandler = (item_type, item_id) => {\r\n    \r\n    switch (item_type) {\r\n      case 'exam': {\r\n        setAlertText('delete-exam')\r\n        //deleteExam(item_id)\r\n        break;\r\n      }\r\n      case 'question': {\r\n        setAlertText('delete-question')\r\n        setQuestionID(item_id)\r\n        break;\r\n\r\n      }\r\n\r\n      default:\r\n        throw new Error()\r\n    }\r\n    setAlertOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAlertOpen(false)\r\n  }\r\n\r\n  const confirmDelete = () => {\r\n    switch (alertText) {\r\n      case 'delete-exam': {\r\n        deleteExam(props.examID)\r\n        break;\r\n      }\r\n      case 'delete-question': {\r\n        deleteQuestion(questionID)\r\n        break;\r\n      }\r\n      default: {\r\n        throw new Error()\r\n      }\r\n    }\r\n    \r\n    setAlertOpen(false)\r\n  }\r\n\r\n\r\n\r\n  if (questions.length < 1) {\r\n    return <div>\r\n      <div>\r\n        <Button color=\"primary\"\r\n          key={uuid()}\r\n          onClick={() => addQuestion(props.examID)}>{<FormattedMessage\r\n            id=\"add-question\"\r\n            defaultMessage=\"Lisää kysymys\"\r\n            description=\"Add question\"\r\n          ></FormattedMessage>}</Button>\r\n      </div>\r\n\r\n    </div>\r\n  }\r\n  else\r\n    return (\r\n\r\n      <div className=\"Question-list\">\r\n        <Paper style={{ width: '95%' }}>\r\n          <div>\r\n\r\n            {setExam[props.e]}\r\n\r\n            {questions.map((item, index) =>\r\n\r\n\r\n\r\n              // tekstikentästä poistuminen aiheuttaa verkkoliikennettä vaikkei mitään muuteta\r\n              \r\n              <div className=\"Question\">\r\n                <TextField\r\n                  key={uuid()}\r\n                  label={<FormattedMessage\r\n                    id=\"question\"\r\n                    defaultMessage=\"Kysymys\"\r\n                    description=\"Question\"\r\n                  ></FormattedMessage>}\r\n                  style={{ width: '90%' }}\r\n                  variant=\"outlined\"\r\n                  defaultValue={item.teksti}\r\n                  /*  onClick={(event) => qClickHandler(event)} */\r\n                  onBlur={(event) => changeQText(props.examID, item.id, event)} ></TextField>\r\n                <DeleteIcon\r\n                  key={uuid()}\r\n                  onClick={(event) => deletionHandler('question',item)}>\r\n\r\n                </DeleteIcon>\r\n                <Vastaukset host={host} key={uuid()} examID={props.examID} questionID={item.id}></Vastaukset>\r\n                <div id={item.index}>\r\n                  <Button key={uuid()} color=\"primary\"\r\n                    onClick={() => addAnswer(props.examID, item.id)}>{<FormattedMessage\r\n                      id=\"add-answer\"\r\n                      defaultMessage=\"Lisää vastaus\"\r\n                      description=\"Add answer\"\r\n                    ></FormattedMessage>}</Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <Button color=\"primary\"\r\n              key={uuid()}\r\n              onClick={() => addQuestion(props.examID)}>{<FormattedMessage\r\n                id=\"add-question\"\r\n                defaultMessage=\"Lisää kysymys\"\r\n                description=\"Add question\"\r\n              ></FormattedMessage>}</Button>\r\n          </div>\r\n          <div>\r\n            <Button color=\"primary\"\r\n              key={uuid()}\r\n              onClick={(event) => deletionHandler('exam', props.examID)}>{<FormattedMessage\r\n                id=\"delete-exam\"\r\n                defaultMessage=\"Poista tentti\"\r\n                description=\"Delete exam\"\r\n              ></FormattedMessage>}</Button>\r\n\r\n            <Dialog\r\n              open={alertOpen}\r\n              close={handleClose}\r\n            >\r\n\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n              {<FormattedMessage\r\n                id={alertText}\r\n            \r\n              ></FormattedMessage>}\r\n                </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                {<FormattedMessage\r\n                id=\"delete-warning\"\r\n                defaultMessage=\"Huomio! Toiminto on peruuttamaton!\"\r\n                description=\"Confirm and delete exam\"\r\n              ></FormattedMessage>}\r\n          </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={confirmDelete} color=\"primary\">{<FormattedMessage\r\n                id=\"alert-confirm\"\r\n                defaultMessage=\"Poista tentti\"\r\n                description=\"Confirm and delete exam\"\r\n              ></FormattedMessage>}\r\n                  \r\n          </Button>\r\n                <Button onClick={handleClose} color=\"primary\" autoFocus >{<FormattedMessage\r\n                id=\"alert-cancel\"\r\n                defaultMessage=\"Peruuta\"\r\n                description=\"Cancel deletion\"\r\n              ></FormattedMessage>}\r\n                  \r\n          </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        </Paper>\r\n      </div>\r\n\r\n    )\r\n}\r\nexport default Kysymykset","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport uuid from 'react-uuid';\r\nimport axios from 'axios';\r\nimport Kysymykset from './Kysymykset'\r\nimport { FormattedMessage, FormattedDate } from 'react-intl';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { addExam, changeExamName, deleteExam, getExam } from './AxiosKutsut';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nconst Exam = (props) => {\r\n  let { path, url } = useRouteMatch()\r\n  const host = props.host\r\n  const [exam, setExam] = useState([])\r\n  const [examID, setExamID] = useState()\r\n  const [examDialogOpen, setExamDialogOpen] = useState(false)\r\n  const [examName, setExamName] = useState(\"\")\r\n  const token = localStorage.token\r\n  const admin = localStorage.admin\r\n  useEffect(() => {\r\n\r\n    const getMenu = async () => {\r\n      console.log(props)\r\n      let response = await getExam()\r\n      setExam(response)\r\n/*       axios\r\n        .get(host + \"/tentit\", { headers: { token: token }, admin: admin })\r\n        .then(response => {\r\n          setExam(response.data)\r\n        }) */\r\n    }\r\n    getMenu()\r\n  }, [examID])\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    console.log(\"huhuu\")\r\n\r\n    setExamDialogOpen(true)\r\n  }\r\n\r\n  const handleClose = (examName) => {\r\n    setExamDialogOpen(false)\r\n    console.log(\"dialogi kiinni\")\r\n    if (examName)\r\n      addExam(examName)\r\n\r\n  }\r\n\r\n\r\n\r\n  if (exam.length < 1 || exam === undefined)\r\n    return <>loading...</>\r\n  return (\r\n\r\n    <div className=\"Exam-list\">\r\n\r\n      <div>\r\n        {exam.map((item, index) =>\r\n\r\n          <Button component={Link} to={`${url}/${item.id}`} key={uuid()} color=\"primary\"\r\n            onClick={() => setExamID(item.id)} >\r\n            {item.nimi}</Button>\r\n        )}\r\n\r\n\r\n\r\n        <Button color=\"primary\"\r\n          onClick={handleClickOpen}\r\n        >\r\n          +\r\n                  </Button>\r\n        \r\n\r\n        {/* <ExamDialog examName={examName} open={examDialogOpen} onClose={handleClose}></ExamDialog> */}\r\n\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route exact path={path}>\r\n        </Route>\r\n        <Route path={`${path}/:id`}>\r\n          <Kysymykset examID={examID} host={host}></Kysymykset>\r\n        </Route>\r\n      </Switch>\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default Exam\r\n\r\n/* function ExamDialog(props) {\r\n  const { open, onClose, examName } = props\r\n\r\n  const handleClose = () => {\r\n    onClose(examName)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {console.log(\"examdialog\")}\r\n      <Dialog open={open} onClose={handleClose} >\r\n        <DialogTitle id=\"newExamDialog\">{\r\n        <FormattedMessage\r\n\r\n          id=\"new-exam-title\"\r\n          description=\"Translation for new exam input\"\r\n        ></FormattedMessage>}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField key={uuid()}\r\n\r\n          >{examName}</TextField>\r\n        </DialogContent>\r\n        <DialogActions><Button onClick={handleClose}>\r\n          Uus tentti\r\n      </Button>\r\n          <Button onClick={handleClose()}>Peruuta</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n} */","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\r\nimport { register } from './AxiosKutsut';\r\n\r\nconst Register = () => {\r\n    const [userData, setUserData] = useState({\r\n        etunimi: '',\r\n        sukunimi: '',\r\n        email: '',\r\n        salasana: '',\r\n        admin: ''\r\n    })\r\n\r\n    const onChange = (e) => {\r\n        setUserData({ ...userData, [e.target.name]: e.target.value })\r\n    }\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        register(userData)\r\n        /* try {\r\n\r\n            await\r\n                axios\r\n                    .post(`http://localhost:5000/register/${userData.etunimi}/${userData.sukunimi}/${userData.email}/${userData.salasana}/${userData.admin}`)\r\n\r\n        } catch (e) {\r\n            console.log(\"registration error\")\r\n        } */\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"Register\">\r\n                <form onSubmit={onSubmit}>\r\n                    <div>\r\n                        <TextField name=\"etunimi\" label={<FormattedMessage\r\n                            id=\"firstName\"\r\n                            defaultMessage=\"Etunimi\"\r\n                            description=\"First name\"\r\n                        ></FormattedMessage>}\r\n                            onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n                    <div>\r\n                        <TextField name=\"sukunimi\" label={<FormattedMessage\r\n                            id=\"surName\"\r\n                            defaultMessage=\"Sukunimi\"\r\n                            description=\"Last name\"\r\n                        ></FormattedMessage>}\r\n                            onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n                    <div>\r\n                        <TextField name=\"email\" label={<FormattedMessage\r\n                            id=\"email\"\r\n                            defaultMessage=\"Sähköpostiosoite\"\r\n                            description=\"Email\"\r\n                        ></FormattedMessage>}\r\n                            onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n                    <div>\r\n                        <TextField name=\"salasana\" label={<FormattedMessage\r\n                            id=\"password\"\r\n                            defaultMessage=\"Salasana\"\r\n                            description=\"Password\"\r\n                        ></FormattedMessage>} type=\"password\"\r\n                            onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n                    <div><TextField name=\"admin\" label={<FormattedMessage\r\n                            id=\"admin\"\r\n                            defaultMessage=\"Opettaja\"\r\n                            description=\"Teacher password\"\r\n                        ></FormattedMessage>}\r\n                        onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n\r\n                    <Button onClick={onSubmit}>\r\n                        <FormattedMessage\r\n                            id=\"register.button\"\r\n                            defaultMessage=\"Rekisteröidy\"\r\n                            description=\"Register/register button\"\r\n                        ></FormattedMessage>\r\n                    </Button>\r\n                </form>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Register","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { login } from './AxiosKutsut';\r\n\r\nconst Login = (props) => {\r\n\r\n    const [token, setToken] = useState(null);\r\n    const [userLogin, setUserLogin] = useState(false)\r\n\r\n    //setUserLogin(props.userLoggedIn)\r\n\r\n    const [userData, setUserData] = useState({\r\n        email: '',\r\n        salasana: '',\r\n    })\r\n    const history = useHistory();\r\n\r\n    const onChange = (e) => {\r\n        setUserData({ ...userData, [e.target.name]: e.target.value })\r\n    }\r\n    const onSubmit = async (e) => {\r\n        \r\n        try {\r\n            e.preventDefault()\r\n\r\n            let response = await login(userData)\r\n\r\n            // siirretty\r\n            /* await\r\n                axios\r\n                    .post(props.host + `/login/`, userData)\r\n             */\r\n            console.log(response)\r\n            let token = await response\r\n            localStorage.setItem('token', response.token)\r\n            localStorage.setItem('admin', response.admin)\r\n            history.push('/')\r\n            //setUserLogin(true)\r\n            window.location.reload()\r\n            \r\n        } catch (e) {\r\n            console.log(\"registration error\")\r\n        }\r\n    }\r\n\r\n    const testaaToken = async () => {\r\n       \r\n        try {\r\n            //e.preventDefault()\r\n\r\n            const response =\r\n            await\r\n                axios\r\n                    .get(props.host + `/tokentestaus/`, {headers: {token: localStorage.token}})\r\n            \r\n            console.log(response)\r\n            \r\n        } catch (e) {\r\n            console.log(\"ei toimi\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <div>\r\n                <TextField name=\"email\" label={<FormattedMessage\r\n                            id=\"email\"\r\n                            defaultMessage=\"Sähköpostiosoite\"\r\n                            description=\"email address\"\r\n                        ></FormattedMessage>}\r\n                    onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n            <div>\r\n                <TextField name=\"salasana\" label={<FormattedMessage\r\n                            id=\"password\"\r\n                            defaultMessage=\"Salasana\"\r\n                            description=\"Password\"\r\n                        ></FormattedMessage>} type=\"password\"\r\n                    onChange={(e) => { onChange(e) }}></TextField></div><p></p>\r\n\r\n            <div><Button onClick={onSubmit}>{<FormattedMessage\r\n                            id=\"login.button\"\r\n                            defaultMessage=\"Kirjaudu sisään\"\r\n                            description=\"Login button\"\r\n                        ></FormattedMessage>}</Button></div>\r\n\r\n            {/* <div><Button onClick={testaaToken}>Tokenin testaus</Button></div>\r\n            \r\n            {localStorage.token}  */}\r\n            \r\n            </div>\r\n\r\n    )\r\n}\r\nexport default Login","import React, { useEffect, useReducer, useContext } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport { useState } from 'react';\nimport { Context } from \"./components/Wrapper\";\n\n// import ShowAnswers from './ShowAnswers'\nimport { Container, Checkbox } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport './App.css';\n// import Tentit from 'user/Tentit.js'\nimport Tentit from './Tentit.js'\nimport Register from './Register.js'\nimport Login from './Login.js'\nimport { FormattedMessage, FormattedDate } from 'react-intl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n//import { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\n\n\n\n\nfunction App(props) {\n\n  var host = null\n  switch (process.env.NODE_ENV) {\n    case 'production':\n      host = 'https://jv-quiztool.herokuapp.com'\n      break\n    case 'development':\n      host = 'http://localhost:5000'\n      break\n    case 'test':\n      host = 'http://localhost:5000'\n      break\n    default:\n      throw \"Environment not properly set!\"\n      break\n  }\n\n  const context = useContext(Context);\n  const [dataFromNodeServer, setDataFromNodeServer] = useState([]);\n  const [dataFromNodeServerFormatted, setDataFromNodeServerFormatted] = useState(false);\n  const [state, dispatch] = useReducer(reducer, []);\n  const [token, setToken] = useState(null);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n  const exams = [];\n\n\n/*   tässä kohtaa oli totetutus websocket-pohjaisille ilmoituksille, mutta\n   ne ei toimi Herokussa joten kommentoitu pois */\n/*   const [alertOpen, setAlertOpen] = useState(false)\n  const [alertMessage, setAlertMessage] = useState(\"\")\n  const client = new W3CWebSocket(`ws://${host}:3001`)\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\nuseEffect(() => {\n  client.onopen = (e) => {\n    console.log(\"WebSocket connection open.\")\n  }\n  client.onmessage = (e) => {\n    console.log(\"client.onmessage \", e.data)\n    setAlertMessage(e.data)\n    setAlertOpen(true)\n    \n   \n  }\n},[client.onChange]) \n\nfunction showAlert(e) {\n    \n \n} */\n \n\n  useEffect(() => {\n    setToken(localStorage.getItem('token'))\n\n    if (token === null) {\n      setUserLoggedIn(false)\n    }\n    else\n      setUserLoggedIn(true)\n  }, [token, userLoggedIn])\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case 'INIT_DATA':\n        return action.data;\n      default:\n        throw new Error();\n    }\n\n  }\n\n  const logIn = () => {\n    setUserLoggedIn(true)\n  }\n  const logOut = () => {\n    localStorage.removeItem('token')\n    setToken(null)\n    setUserLoggedIn(false)\n  }\n  \n  // websocket-viesti-ikkunan sulkija\n/*     function handleClose(event, reason){\n      if (reason === 'clickaway') {\n        return;\n      } \n  \n      setAlertOpen(false);\n    } */\n \n  function HomeIcon(props) {\n    return (\n      <SvgIcon {...props}>\n        <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n      </SvgIcon>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n\n\n      <Router >\n        \n        <div>\n          <nav>\n\n\n            <Button component={Link} to=\"/\" ><HomeIcon color=\"action\"></HomeIcon></Button>\n\n            {userLoggedIn\n              ?\n              <React.Fragment>\n                <Button component={Link} to='/tentit'>\n                  <FormattedMessage\n                    id=\"tentit.button\"\n                    defaultMessage=\"Tentit\"\n                    description=\"Navigation/exams button\"\n                  ></FormattedMessage></Button>\n\n                <Button onClick={logOut} component={Link} to=\"/\">\n                  <FormattedMessage\n                    id=\"logout.button\"\n                    defaultMessage=\"Poistu\"\n                    description=\"Log out button\"\n                  ></FormattedMessage></Button>\n\n              </React.Fragment>\n              :\n              <React.Fragment>\n                <Button component={Link} to='/login' ><FormattedMessage\n                  id=\"login.button\"\n                  defaultMessage=\"Kirjaudu\"\n                  description=\"Navigation/login button\"\n                ></FormattedMessage></Button>\n                <Button component={Link} to='/register'><FormattedMessage\n                  id=\"register.button\"\n                  defaultMessage=\"Rekisteröidy\"\n                  description=\"Navigation/register button\"\n                ></FormattedMessage></Button>\n              </React.Fragment>\n            }\n\n\n\n\n\n            <select className=\"language-selector\" value={context.locale} onChange={context.selectLanguage}>\n              <option value='en-gb'>English</option>\n              <option default value='fi'>suomi</option>\n              <option value='vi'>Tiếng Việt</option>\n            </select>\n            <text className=\"date-time\"><FormattedDate\n\n              value={props.date}\n              year='numeric'\n              month='numeric'\n              day='numeric'\n              weekday='long'\n            ></FormattedDate></text>\n\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch >\n            <Route path=\"/register\">\n              <Register host={host} />\n            </Route>\n            <Route path=\"/login\">\n              <Login host={host} userLoggedIn={userLoggedIn} onChange={logIn}/>\n            </Route>\n            <Route path=\"/tentit\">\n              <Tentit host={host} />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n\n      {/* {\n      \n      \n      <div>\n      {console.log(\"Renderöinnin viesti:\", alertMessage)}\n    <Snackbar open={alertOpen} onClose={handleClose} autoHideDuration={3000} anchorOrigin={{\n         vertical: 'bottom',\n         horizontal: 'left',\n       }} > \n     <Alert severity=\"info\"><FormattedMessage\n     \n              id={alertMessage.toString()}\n              \n              description=\"Translations for alert messages\"\n            ></FormattedMessage></Alert>\n    </Snackbar> </div> \n }\n */}\n    </div>\n\n\n\n\n\n  );\n}\nfunction Home() {\n  return null;\n}\n\n\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\nexport default App;\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport Dropzone from './Dropzone'\nimport {IntlProvider} from \"react-intl\";\n\nimport Wrapper from \"./components/Wrapper\";\nimport Finnish from './lang/fi.json'\nimport Vietnamese from './lang/vi.json'\n\n\n\n// import tentit from './Tentit'\n// import kysymykset from './Kysymykset'\n/* import AppJSONserver from './AppJSONserver'\nimport AppLocalStorage from './AppLocalStorage';\nimport LocalStorageChartDemo from './LocalStorageChartDemo'\n *//*import AdminLocalStorage from './AdminLocalStorage'; */\n\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  \n    { <Wrapper>\n       <App date = {Date.now()} />\n       </Wrapper> }\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}